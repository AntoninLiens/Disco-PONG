# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface Node {
  id: ID!
  createDate: DateTime!
  updateDate: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Game {
  id: ID!
  createDate: DateTime!
  updateDate: DateTime!
  winner: User
  looser: User
}

type User {
  id: ID!
  createDate: DateTime!
  updateDate: DateTime!
  name: String!
  password: String!
  image: String
  score: Float!
  coins: Float!
  level: Float!
  statut: Boolean!
}

type UserCreateOutput {
  user: User!
}

type UserDeleteOutput {
  userId: ID!
}

type UserUpdateOutput {
  user: User!
}

type UserPagination {
  count: Float!
  node: [User!]!
}

type AuthLoginOutput {
  accessToken: String!
}

type GameCreateOutput {
  game: Game!
}

type GameDeleteOutput {
  gameId: ID!
}

type GamePagination {
  count: Float!
  node: [Game!]!
}

type Query {
  sayHello: String!
  userPagination(skip: Int!, take: Int!, sortBy: UserPaginationSortBy): UserPagination!
  getUserByName(userName: String!): User!
  gamePagination(skip: Int!, take: Int!, sortBy: PaginationSortBy): GamePagination!
}

input UserPaginationSortBy {
  createDate: SortDirection
  name: SortDirection
}

enum SortDirection {
  ASC
  DESC
}

input PaginationSortBy {
  createDate: SortDirection
}

type Mutation {
  userCreate(input: UserCreateInput!): UserCreateOutput!
  userUpdate(userId: ID!, input: UserUpdateInput!): UserUpdateOutput!
  userDelete(userId: ID!): UserDeleteOutput!
  authLogin(username: String!, password: String!): AuthLoginOutput!
  gameCreate: GameCreateOutput!
  gameDelete(gameId: ID!): GameDeleteOutput!
}

input UserCreateInput {
  name: String!
  password: String!
  image: String!
  score: Float!
  level: Float!
  coins: Float!
  statut: Boolean!
}

input UserUpdateInput {
  name: String!
  password: String!
  image: String!
  score: Float!
  level: Float!
  coins: Float!
  statut: Boolean!
}